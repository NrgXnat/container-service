group 'org.nrg'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'

sourceCompatibility = 1.7
targetCompatibility = 1.7

def vXnat = '1.7.0'
def vSpring = '4.2.7.RELEASE'
def vSwagger = '2.4.0'
def vHibernate = '4.3.11.Final'
def vJackson = '2.6.5'
def vSlf4j = '1.7.21'
def vJunit = '4.12'

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url 'https://nrgxnat.jfrog.io/nrgxnat/libs-release'
        name 'XNAT Release Repository'
    }
    maven {
        url 'https://nrgxnat.jfrog.io/nrgxnat/libs-snapshot'
        name 'XNAT Snapshot Repository'
    }
    maven {
        url 'https://nrgxnat.jfrog.io/nrgxnat/ext-release'
        name 'XNAT External Release Repository'
    }
}

dependencies {

    // Include XNAT source, but not all its dependencies
    compile ("org.nrg.xnat:web:${vXnat}") {
        transitive = false
    }
    compile ("org.nrg.xnat:xnat-data-models:${vXnat}") {
        transitive = false
    }
    compile "org.nrg.xdat:core:${vXnat}"
    compile ("org.nrg:prefs:${vXnat}") {
        transitive = false
    }
    compile ("org.nrg:config:${vXnat}") {
        transitive = false
    }
    compile ("org.nrg:automation:${vXnat}") {
        transitive = false
    }
    compile "org.nrg:framework:${vXnat}"
    compile (group: "org.nrg", name: "transporter", version: "1.0-SNAPSHOT") {
        transitive = false
    }
//    compile "org.nrg:transaction:${vXnat}"

    compile "org.springframework:spring-beans:${vSpring}"
    compile "org.springframework:spring-context:${vSpring}"
    compile "org.springframework:spring-core:${vSpring}"
    compile "org.springframework:spring-tx:${vSpring}"
    compile "org.springframework:spring-web:${vSpring}"
    compile "org.springframework:spring-webmvc:${vSpring}"

    compile "io.springfox:springfox-swagger2:${vSwagger}"
    compile "io.springfox:springfox-swagger-ui:${vSwagger}"

    compile "org.hibernate:hibernate-core:${vHibernate}"

    compile "com.fasterxml.jackson.core:jackson-annotations:${vJackson}"
    compile "com.fasterxml.jackson.core:jackson-core:${vJackson}"
    compile "com.fasterxml.jackson.core:jackson-databind:${vJackson}"
    compile "com.jayway.jsonpath:json-path:2.2.0"

    compile "org.slf4j:slf4j-api:${vSlf4j}"
    compile "org.slf4j:slf4j-log4j12:${vSlf4j}"

    compile "commons-lang:commons-lang:2.6"
    compile "org.apache.httpcomponents:httpclient:4.5.1"
    compile "io.rest-assured:rest-assured:3.0.1"

    compile "javax.inject:javax.inject:1"
    compile "javax.servlet:javax.servlet-api:3.1.0"

    compile "com.google.guava:guava:19.0"

    // add turbine, exclude turbine's copy of velocity and all other imported crap (i.e. jamon)
    compile ("turbine:turbine:2.3.3") {
        transitive = false
    }

    // add velocity 1.7
    compile "org.apache.velocity:velocity:1.7"

//    compile "org.codehaus.groovy:groovy-all:${vGroovy}"
    compile (group: 'com.spotify', name: 'docker-client', version: '6.+') {
        exclude group: "ch.qos.logback"
    }

    testCompile group: 'junit', name: 'junit', version: "${vJunit}"
    testCompile "org.hamcrest:hamcrest-library:1.3"
    testCompile "org.springframework:spring-test:${vSpring}"
    testCompile "org.springframework.security:spring-security-test:4.0.4.RELEASE"
    testCompile "org.springframework.security:spring-security-config:4.0.4.RELEASE"
    testCompile "org.mockito:mockito-core:1.+"
    testCompile "javax.servlet:javax.servlet-api:3.1.0"
    testCompile "com.h2database:h2:1.4.191"
    testCompile "org.springframework:spring-jdbc:${vSpring}"
    testCompile "org.springframework:spring-orm:${vSpring}"
    testCompile "org.nrg:framework:${vXnat}"
    testCompile "com.google.code.gson:gson:2.6.2"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

task unitTest( type: Test ) {
    exclude '**/DockerControlApiTest.class', '**/DockerIntegrationTest.class'
}

//compileJava {
//    options.encoding = 'UTF-8'
//    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
//}
//
//compileTestJava {
//    options.encoding = 'UTF-8'
//    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
//}
