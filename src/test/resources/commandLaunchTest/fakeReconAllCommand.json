{
    "name": "fake recon-all",
    "description": "Mimics what I think a recon-all command would be, but with a different command-line.",
    "docker-image": "busybox:latest",
    "run": {
        "command-line": "echo recon-all #SUBJECT_ID# #OTHER_ARGS# >> /output/out.txt; ls /input >> /output/out.txt" ,
        "mounts": [
            {
                "name": "input",
                "type": "input",
                "path": "/input",
                "file-input": "resource"
            },
            {
                "name": "output",
                "type": "output",
                "path": "/output"
            }
        ]
    },
    "inputs": [
        {
            "name": "session",
            "description": "Input session",
            "type": "Session",
            "required": true
        },
        {
            "name": "label",
            "description": "Session label. Used as Freesurfer subject identifier.",
            "type": "string",
            "required": true,
            "parent": "session",
            "parent-property": "label",
            "replacement-key": "#SUBJECT_ID#",
            "command-line-flag": "-s"
        },
        {
            "name": "T1-scantype",
            "description": "Scantype of T1 scans",
            "type": "string",
            "default-value": "pipelines/mr_scan_types"
        },
        {
            "name": "T1",
            "description": "Input T1 scan",
            "type": "Scan",
            "parent": "session",
            "prerequisites": "T1-scantype",
            "matcher": "@.scan-type == '^$.inputs[?(@.name == 'T1-scantype')].value^'"
        },
        {
            "name": "resource",
            "description": "Input resource: DICOM or NIFTI",
            "type": "Resource",
            "parent": "T1",
            "matcher": "@.label in [\"DICOM\", \"NIFTI\"]"
        },
        {
            "name": "other-recon-all-args",
            "description": "Arguments to pass to recon-all",
            "default-value": "-all",
            "replacement-key": "#OTHER_ARGS#"
        }
    ],
    "outputs": [
        {
            "name": "fs",
            "type": "Assessor",
            "parent": "session",
            "files": {
                "mount": "output",
                "path": "^$.inputs[?(@.name == 'label')].value^/fs.xml"
            }
        },
        {
            "name": "data",
            "type": "Resource",
            "parent": "fs",
            "label": "DATA",
            "files": {
                "mount": "output",
                "path": "^$.inputs[?(@.name == 'label')].value^"
            }
        }
    ]
}